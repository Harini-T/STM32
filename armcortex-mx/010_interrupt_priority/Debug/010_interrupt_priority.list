
010_interrupt_priority.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000d7c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000090  08000f24  08000f24  00010f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000fb4  08000fb4  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08000fb4  08000fb4  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000fb4  08000fb4  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000fb4  08000fb4  00010fb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000fb8  08000fb8  00010fb8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08000fbc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00020070  2**0
                  CONTENTS
 10 .bss          00000030  20000070  20000070  00020070  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200000a0  200000a0  00020070  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a24  00000000  00000000  0002009a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000357  00000000  00000000  00020abe  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000130  00000000  00000000  00020e18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000000f8  00000000  00000000  00020f48  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002bec  00000000  00000000  00021040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000136f  00000000  00000000  00023c2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000093bb  00000000  00000000  00024f9b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0002e356  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000a78  00000000  00000000  0002e3a8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000070 	.word	0x20000070
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000f0c 	.word	0x08000f0c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000074 	.word	0x20000074
 80001e4:	08000f0c 	.word	0x08000f0c

080001e8 <configure_priority_for_irqs>:
uint32_t *pNVIC_ISERBase = (uint32_t*)0xE000E100;
uint32_t *pNVIC_ISPRBase = (uint32_t*)0XE000E200;


void configure_priority_for_irqs(uint8_t irq_no, uint8_t priority_value)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b087      	sub	sp, #28
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	4603      	mov	r3, r0
 80001f0:	460a      	mov	r2, r1
 80001f2:	71fb      	strb	r3, [r7, #7]
 80001f4:	4613      	mov	r3, r2
 80001f6:	71bb      	strb	r3, [r7, #6]
	//1. find out iprx
	uint8_t iprx = irq_no / 4;
 80001f8:	79fb      	ldrb	r3, [r7, #7]
 80001fa:	089b      	lsrs	r3, r3, #2
 80001fc:	75fb      	strb	r3, [r7, #23]
	uint32_t *ipr =  pNVIC_IPRBase+iprx;
 80001fe:	4b12      	ldr	r3, [pc, #72]	; (8000248 <configure_priority_for_irqs+0x60>)
 8000200:	681a      	ldr	r2, [r3, #0]
 8000202:	7dfb      	ldrb	r3, [r7, #23]
 8000204:	009b      	lsls	r3, r3, #2
 8000206:	4413      	add	r3, r2
 8000208:	613b      	str	r3, [r7, #16]

	//2. position in iprx
	uint8_t pos = (irq_no % 4) * 8;
 800020a:	79fb      	ldrb	r3, [r7, #7]
 800020c:	f003 0303 	and.w	r3, r3, #3
 8000210:	b2db      	uxtb	r3, r3
 8000212:	00db      	lsls	r3, r3, #3
 8000214:	73fb      	strb	r3, [r7, #15]

	//3. configure the priority
	*ipr &= ~(0xFF << pos);//clear
 8000216:	693b      	ldr	r3, [r7, #16]
 8000218:	681b      	ldr	r3, [r3, #0]
 800021a:	7bfa      	ldrb	r2, [r7, #15]
 800021c:	21ff      	movs	r1, #255	; 0xff
 800021e:	fa01 f202 	lsl.w	r2, r1, r2
 8000222:	43d2      	mvns	r2, r2
 8000224:	401a      	ands	r2, r3
 8000226:	693b      	ldr	r3, [r7, #16]
 8000228:	601a      	str	r2, [r3, #0]
	*ipr |=  (priority_value << pos);
 800022a:	693b      	ldr	r3, [r7, #16]
 800022c:	681b      	ldr	r3, [r3, #0]
 800022e:	79b9      	ldrb	r1, [r7, #6]
 8000230:	7bfa      	ldrb	r2, [r7, #15]
 8000232:	fa01 f202 	lsl.w	r2, r1, r2
 8000236:	431a      	orrs	r2, r3
 8000238:	693b      	ldr	r3, [r7, #16]
 800023a:	601a      	str	r2, [r3, #0]

}
 800023c:	bf00      	nop
 800023e:	371c      	adds	r7, #28
 8000240:	46bd      	mov	sp, r7
 8000242:	bc80      	pop	{r7}
 8000244:	4770      	bx	lr
 8000246:	bf00      	nop
 8000248:	20000000 	.word	0x20000000

0800024c <main>:

int main(void)
{
 800024c:	b580      	push	{r7, lr}
 800024e:	af00      	add	r7, sp, #0
	//1. Lets configure the priority for the peripherals
	 configure_priority_for_irqs(IRQNO_TIMER2,0x80);
 8000250:	2180      	movs	r1, #128	; 0x80
 8000252:	201c      	movs	r0, #28
 8000254:	f7ff ffc8 	bl	80001e8 <configure_priority_for_irqs>
	 configure_priority_for_irqs(IRQNO_I2C1,0x70);
 8000258:	2170      	movs	r1, #112	; 0x70
 800025a:	201f      	movs	r0, #31
 800025c:	f7ff ffc4 	bl	80001e8 <configure_priority_for_irqs>

	//2. Set the interrupt pending bit in the NVIC PR
	 *pNVIC_ISPRBase |= ( 1 << IRQNO_TIMER2);
 8000260:	4b0d      	ldr	r3, [pc, #52]	; (8000298 <main+0x4c>)
 8000262:	681b      	ldr	r3, [r3, #0]
 8000264:	681a      	ldr	r2, [r3, #0]
 8000266:	4b0c      	ldr	r3, [pc, #48]	; (8000298 <main+0x4c>)
 8000268:	681b      	ldr	r3, [r3, #0]
 800026a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800026e:	601a      	str	r2, [r3, #0]

	//3. Enable the IRQs in NVIC ISER
	 *pNVIC_ISERBase |= ( 1 << IRQNO_I2C1);
 8000270:	4b0a      	ldr	r3, [pc, #40]	; (800029c <main+0x50>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	681a      	ldr	r2, [r3, #0]
 8000276:	4b09      	ldr	r3, [pc, #36]	; (800029c <main+0x50>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 800027e:	601a      	str	r2, [r3, #0]
	 *pNVIC_ISERBase |= ( 1 << IRQNO_TIMER2);
 8000280:	4b06      	ldr	r3, [pc, #24]	; (800029c <main+0x50>)
 8000282:	681b      	ldr	r3, [r3, #0]
 8000284:	681a      	ldr	r2, [r3, #0]
 8000286:	4b05      	ldr	r3, [pc, #20]	; (800029c <main+0x50>)
 8000288:	681b      	ldr	r3, [r3, #0]
 800028a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800028e:	601a      	str	r2, [r3, #0]
 8000290:	2300      	movs	r3, #0


}
 8000292:	4618      	mov	r0, r3
 8000294:	bd80      	pop	{r7, pc}
 8000296:	bf00      	nop
 8000298:	20000008 	.word	0x20000008
 800029c:	20000004 	.word	0x20000004

080002a0 <TIM2_IRQHandler>:

//isrs

void TIM2_IRQHandler(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	af00      	add	r7, sp, #0
  printf("[TIM2_IRQHandler]\n");
 80002a4:	4805      	ldr	r0, [pc, #20]	; (80002bc <TIM2_IRQHandler+0x1c>)
 80002a6:	f000 f9a7 	bl	80005f8 <puts>
  /*Here, we are pending I2C interrupt request manually */
  *pNVIC_ISPRBase |= ( 1 << IRQNO_I2C1);
 80002aa:	4b05      	ldr	r3, [pc, #20]	; (80002c0 <TIM2_IRQHandler+0x20>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	681a      	ldr	r2, [r3, #0]
 80002b0:	4b03      	ldr	r3, [pc, #12]	; (80002c0 <TIM2_IRQHandler+0x20>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	f042 4200 	orr.w	r2, r2, #2147483648	; 0x80000000
 80002b8:	601a      	str	r2, [r3, #0]
  while(1);
 80002ba:	e7fe      	b.n	80002ba <TIM2_IRQHandler+0x1a>
 80002bc:	08000f24 	.word	0x08000f24
 80002c0:	20000008 	.word	0x20000008

080002c4 <I2C1_EV_IRQHandler>:

}


void I2C1_EV_IRQHandler(void)
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	af00      	add	r7, sp, #0
  printf("[I2C1_EV_IRQHandler]\n");
 80002c8:	4802      	ldr	r0, [pc, #8]	; (80002d4 <I2C1_EV_IRQHandler+0x10>)
 80002ca:	f000 f995 	bl	80005f8 <puts>
}
 80002ce:	bf00      	nop
 80002d0:	bd80      	pop	{r7, pc}
 80002d2:	bf00      	nop
 80002d4:	08000f38 	.word	0x08000f38

080002d8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002d8:	b480      	push	{r7}
 80002da:	b083      	sub	sp, #12
 80002dc:	af00      	add	r7, sp, #0
 80002de:	4603      	mov	r3, r0
 80002e0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002e2:	4b0e      	ldr	r3, [pc, #56]	; (800031c <ITM_SendChar+0x44>)
 80002e4:	681b      	ldr	r3, [r3, #0]
 80002e6:	4a0d      	ldr	r2, [pc, #52]	; (800031c <ITM_SendChar+0x44>)
 80002e8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002ec:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002ee:	4b0c      	ldr	r3, [pc, #48]	; (8000320 <ITM_SendChar+0x48>)
 80002f0:	681b      	ldr	r3, [r3, #0]
 80002f2:	4a0b      	ldr	r2, [pc, #44]	; (8000320 <ITM_SendChar+0x48>)
 80002f4:	f043 0301 	orr.w	r3, r3, #1
 80002f8:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 80002fa:	bf00      	nop
 80002fc:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	f003 0301 	and.w	r3, r3, #1
 8000306:	2b00      	cmp	r3, #0
 8000308:	d0f8      	beq.n	80002fc <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800030a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800030e:	79fb      	ldrb	r3, [r7, #7]
 8000310:	6013      	str	r3, [r2, #0]
}
 8000312:	bf00      	nop
 8000314:	370c      	adds	r7, #12
 8000316:	46bd      	mov	sp, r7
 8000318:	bc80      	pop	{r7}
 800031a:	4770      	bx	lr
 800031c:	e000edfc 	.word	0xe000edfc
 8000320:	e0000e00 	.word	0xe0000e00

08000324 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	b086      	sub	sp, #24
 8000328:	af00      	add	r7, sp, #0
 800032a:	60f8      	str	r0, [r7, #12]
 800032c:	60b9      	str	r1, [r7, #8]
 800032e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000330:	2300      	movs	r3, #0
 8000332:	617b      	str	r3, [r7, #20]
 8000334:	e00a      	b.n	800034c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000336:	f3af 8000 	nop.w
 800033a:	4601      	mov	r1, r0
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	b2ca      	uxtb	r2, r1
 8000344:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000346:	697b      	ldr	r3, [r7, #20]
 8000348:	3301      	adds	r3, #1
 800034a:	617b      	str	r3, [r7, #20]
 800034c:	697a      	ldr	r2, [r7, #20]
 800034e:	687b      	ldr	r3, [r7, #4]
 8000350:	429a      	cmp	r2, r3
 8000352:	dbf0      	blt.n	8000336 <_read+0x12>
  }

  return len;
 8000354:	687b      	ldr	r3, [r7, #4]
}
 8000356:	4618      	mov	r0, r3
 8000358:	3718      	adds	r7, #24
 800035a:	46bd      	mov	sp, r7
 800035c:	bd80      	pop	{r7, pc}

0800035e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800035e:	b580      	push	{r7, lr}
 8000360:	b086      	sub	sp, #24
 8000362:	af00      	add	r7, sp, #0
 8000364:	60f8      	str	r0, [r7, #12]
 8000366:	60b9      	str	r1, [r7, #8]
 8000368:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800036a:	2300      	movs	r3, #0
 800036c:	617b      	str	r3, [r7, #20]
 800036e:	e009      	b.n	8000384 <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000370:	68bb      	ldr	r3, [r7, #8]
 8000372:	1c5a      	adds	r2, r3, #1
 8000374:	60ba      	str	r2, [r7, #8]
 8000376:	781b      	ldrb	r3, [r3, #0]
 8000378:	4618      	mov	r0, r3
 800037a:	f7ff ffad 	bl	80002d8 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037e:	697b      	ldr	r3, [r7, #20]
 8000380:	3301      	adds	r3, #1
 8000382:	617b      	str	r3, [r7, #20]
 8000384:	697a      	ldr	r2, [r7, #20]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	429a      	cmp	r2, r3
 800038a:	dbf1      	blt.n	8000370 <_write+0x12>
  }
  return len;
 800038c:	687b      	ldr	r3, [r7, #4]
}
 800038e:	4618      	mov	r0, r3
 8000390:	3718      	adds	r7, #24
 8000392:	46bd      	mov	sp, r7
 8000394:	bd80      	pop	{r7, pc}

08000396 <_close>:

int _close(int file)
{
 8000396:	b480      	push	{r7}
 8000398:	b083      	sub	sp, #12
 800039a:	af00      	add	r7, sp, #0
 800039c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800039e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	370c      	adds	r7, #12
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bc80      	pop	{r7}
 80003aa:	4770      	bx	lr

080003ac <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003ac:	b480      	push	{r7}
 80003ae:	b083      	sub	sp, #12
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
 80003b4:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003b6:	683b      	ldr	r3, [r7, #0]
 80003b8:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003bc:	605a      	str	r2, [r3, #4]
  return 0;
 80003be:	2300      	movs	r3, #0
}
 80003c0:	4618      	mov	r0, r3
 80003c2:	370c      	adds	r7, #12
 80003c4:	46bd      	mov	sp, r7
 80003c6:	bc80      	pop	{r7}
 80003c8:	4770      	bx	lr

080003ca <_isatty>:

int _isatty(int file)
{
 80003ca:	b480      	push	{r7}
 80003cc:	b083      	sub	sp, #12
 80003ce:	af00      	add	r7, sp, #0
 80003d0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003d2:	2301      	movs	r3, #1
}
 80003d4:	4618      	mov	r0, r3
 80003d6:	370c      	adds	r7, #12
 80003d8:	46bd      	mov	sp, r7
 80003da:	bc80      	pop	{r7}
 80003dc:	4770      	bx	lr

080003de <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003de:	b480      	push	{r7}
 80003e0:	b085      	sub	sp, #20
 80003e2:	af00      	add	r7, sp, #0
 80003e4:	60f8      	str	r0, [r7, #12]
 80003e6:	60b9      	str	r1, [r7, #8]
 80003e8:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003ea:	2300      	movs	r3, #0
}
 80003ec:	4618      	mov	r0, r3
 80003ee:	3714      	adds	r7, #20
 80003f0:	46bd      	mov	sp, r7
 80003f2:	bc80      	pop	{r7}
 80003f4:	4770      	bx	lr
	...

080003f8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003f8:	b580      	push	{r7, lr}
 80003fa:	b086      	sub	sp, #24
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000400:	4a14      	ldr	r2, [pc, #80]	; (8000454 <_sbrk+0x5c>)
 8000402:	4b15      	ldr	r3, [pc, #84]	; (8000458 <_sbrk+0x60>)
 8000404:	1ad3      	subs	r3, r2, r3
 8000406:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000408:	697b      	ldr	r3, [r7, #20]
 800040a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800040c:	4b13      	ldr	r3, [pc, #76]	; (800045c <_sbrk+0x64>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	2b00      	cmp	r3, #0
 8000412:	d102      	bne.n	800041a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000414:	4b11      	ldr	r3, [pc, #68]	; (800045c <_sbrk+0x64>)
 8000416:	4a12      	ldr	r2, [pc, #72]	; (8000460 <_sbrk+0x68>)
 8000418:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800041a:	4b10      	ldr	r3, [pc, #64]	; (800045c <_sbrk+0x64>)
 800041c:	681a      	ldr	r2, [r3, #0]
 800041e:	687b      	ldr	r3, [r7, #4]
 8000420:	4413      	add	r3, r2
 8000422:	693a      	ldr	r2, [r7, #16]
 8000424:	429a      	cmp	r2, r3
 8000426:	d207      	bcs.n	8000438 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000428:	f000 f846 	bl	80004b8 <__errno>
 800042c:	4603      	mov	r3, r0
 800042e:	220c      	movs	r2, #12
 8000430:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000432:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000436:	e009      	b.n	800044c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000438:	4b08      	ldr	r3, [pc, #32]	; (800045c <_sbrk+0x64>)
 800043a:	681b      	ldr	r3, [r3, #0]
 800043c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800043e:	4b07      	ldr	r3, [pc, #28]	; (800045c <_sbrk+0x64>)
 8000440:	681a      	ldr	r2, [r3, #0]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	4413      	add	r3, r2
 8000446:	4a05      	ldr	r2, [pc, #20]	; (800045c <_sbrk+0x64>)
 8000448:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800044a:	68fb      	ldr	r3, [r7, #12]
}
 800044c:	4618      	mov	r0, r3
 800044e:	3718      	adds	r7, #24
 8000450:	46bd      	mov	sp, r7
 8000452:	bd80      	pop	{r7, pc}
 8000454:	20020000 	.word	0x20020000
 8000458:	00000400 	.word	0x00000400
 800045c:	2000008c 	.word	0x2000008c
 8000460:	200000a0 	.word	0x200000a0

08000464 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000464:	480d      	ldr	r0, [pc, #52]	; (800049c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000466:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000468:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800046c:	480c      	ldr	r0, [pc, #48]	; (80004a0 <LoopForever+0x6>)
  ldr r1, =_edata
 800046e:	490d      	ldr	r1, [pc, #52]	; (80004a4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000470:	4a0d      	ldr	r2, [pc, #52]	; (80004a8 <LoopForever+0xe>)
  movs r3, #0
 8000472:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000474:	e002      	b.n	800047c <LoopCopyDataInit>

08000476 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000476:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000478:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800047a:	3304      	adds	r3, #4

0800047c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800047c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800047e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000480:	d3f9      	bcc.n	8000476 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000482:	4a0a      	ldr	r2, [pc, #40]	; (80004ac <LoopForever+0x12>)
  ldr r4, =_ebss
 8000484:	4c0a      	ldr	r4, [pc, #40]	; (80004b0 <LoopForever+0x16>)
  movs r3, #0
 8000486:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000488:	e001      	b.n	800048e <LoopFillZerobss>

0800048a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800048a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800048c:	3204      	adds	r2, #4

0800048e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800048e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000490:	d3fb      	bcc.n	800048a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000492:	f000 f817 	bl	80004c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000496:	f7ff fed9 	bl	800024c <main>

0800049a <LoopForever>:

LoopForever:
  b LoopForever
 800049a:	e7fe      	b.n	800049a <LoopForever>
  ldr   r0, =_estack
 800049c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004a0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004a4:	20000070 	.word	0x20000070
  ldr r2, =_sidata
 80004a8:	08000fbc 	.word	0x08000fbc
  ldr r2, =_sbss
 80004ac:	20000070 	.word	0x20000070
  ldr r4, =_ebss
 80004b0:	200000a0 	.word	0x200000a0

080004b4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004b4:	e7fe      	b.n	80004b4 <ADC_IRQHandler>
	...

080004b8 <__errno>:
 80004b8:	4b01      	ldr	r3, [pc, #4]	; (80004c0 <__errno+0x8>)
 80004ba:	6818      	ldr	r0, [r3, #0]
 80004bc:	4770      	bx	lr
 80004be:	bf00      	nop
 80004c0:	2000000c 	.word	0x2000000c

080004c4 <__libc_init_array>:
 80004c4:	b570      	push	{r4, r5, r6, lr}
 80004c6:	4d0d      	ldr	r5, [pc, #52]	; (80004fc <__libc_init_array+0x38>)
 80004c8:	4c0d      	ldr	r4, [pc, #52]	; (8000500 <__libc_init_array+0x3c>)
 80004ca:	1b64      	subs	r4, r4, r5
 80004cc:	10a4      	asrs	r4, r4, #2
 80004ce:	2600      	movs	r6, #0
 80004d0:	42a6      	cmp	r6, r4
 80004d2:	d109      	bne.n	80004e8 <__libc_init_array+0x24>
 80004d4:	4d0b      	ldr	r5, [pc, #44]	; (8000504 <__libc_init_array+0x40>)
 80004d6:	4c0c      	ldr	r4, [pc, #48]	; (8000508 <__libc_init_array+0x44>)
 80004d8:	f000 fd18 	bl	8000f0c <_init>
 80004dc:	1b64      	subs	r4, r4, r5
 80004de:	10a4      	asrs	r4, r4, #2
 80004e0:	2600      	movs	r6, #0
 80004e2:	42a6      	cmp	r6, r4
 80004e4:	d105      	bne.n	80004f2 <__libc_init_array+0x2e>
 80004e6:	bd70      	pop	{r4, r5, r6, pc}
 80004e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80004ec:	4798      	blx	r3
 80004ee:	3601      	adds	r6, #1
 80004f0:	e7ee      	b.n	80004d0 <__libc_init_array+0xc>
 80004f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80004f6:	4798      	blx	r3
 80004f8:	3601      	adds	r6, #1
 80004fa:	e7f2      	b.n	80004e2 <__libc_init_array+0x1e>
 80004fc:	08000fb4 	.word	0x08000fb4
 8000500:	08000fb4 	.word	0x08000fb4
 8000504:	08000fb4 	.word	0x08000fb4
 8000508:	08000fb8 	.word	0x08000fb8

0800050c <memset>:
 800050c:	4402      	add	r2, r0
 800050e:	4603      	mov	r3, r0
 8000510:	4293      	cmp	r3, r2
 8000512:	d100      	bne.n	8000516 <memset+0xa>
 8000514:	4770      	bx	lr
 8000516:	f803 1b01 	strb.w	r1, [r3], #1
 800051a:	e7f9      	b.n	8000510 <memset+0x4>

0800051c <_puts_r>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	460e      	mov	r6, r1
 8000520:	4605      	mov	r5, r0
 8000522:	b118      	cbz	r0, 800052c <_puts_r+0x10>
 8000524:	6983      	ldr	r3, [r0, #24]
 8000526:	b90b      	cbnz	r3, 800052c <_puts_r+0x10>
 8000528:	f000 fa44 	bl	80009b4 <__sinit>
 800052c:	69ab      	ldr	r3, [r5, #24]
 800052e:	68ac      	ldr	r4, [r5, #8]
 8000530:	b913      	cbnz	r3, 8000538 <_puts_r+0x1c>
 8000532:	4628      	mov	r0, r5
 8000534:	f000 fa3e 	bl	80009b4 <__sinit>
 8000538:	4b2c      	ldr	r3, [pc, #176]	; (80005ec <_puts_r+0xd0>)
 800053a:	429c      	cmp	r4, r3
 800053c:	d120      	bne.n	8000580 <_puts_r+0x64>
 800053e:	686c      	ldr	r4, [r5, #4]
 8000540:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000542:	07db      	lsls	r3, r3, #31
 8000544:	d405      	bmi.n	8000552 <_puts_r+0x36>
 8000546:	89a3      	ldrh	r3, [r4, #12]
 8000548:	0598      	lsls	r0, r3, #22
 800054a:	d402      	bmi.n	8000552 <_puts_r+0x36>
 800054c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800054e:	f000 facf 	bl	8000af0 <__retarget_lock_acquire_recursive>
 8000552:	89a3      	ldrh	r3, [r4, #12]
 8000554:	0719      	lsls	r1, r3, #28
 8000556:	d51d      	bpl.n	8000594 <_puts_r+0x78>
 8000558:	6923      	ldr	r3, [r4, #16]
 800055a:	b1db      	cbz	r3, 8000594 <_puts_r+0x78>
 800055c:	3e01      	subs	r6, #1
 800055e:	68a3      	ldr	r3, [r4, #8]
 8000560:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8000564:	3b01      	subs	r3, #1
 8000566:	60a3      	str	r3, [r4, #8]
 8000568:	bb39      	cbnz	r1, 80005ba <_puts_r+0x9e>
 800056a:	2b00      	cmp	r3, #0
 800056c:	da38      	bge.n	80005e0 <_puts_r+0xc4>
 800056e:	4622      	mov	r2, r4
 8000570:	210a      	movs	r1, #10
 8000572:	4628      	mov	r0, r5
 8000574:	f000 f848 	bl	8000608 <__swbuf_r>
 8000578:	3001      	adds	r0, #1
 800057a:	d011      	beq.n	80005a0 <_puts_r+0x84>
 800057c:	250a      	movs	r5, #10
 800057e:	e011      	b.n	80005a4 <_puts_r+0x88>
 8000580:	4b1b      	ldr	r3, [pc, #108]	; (80005f0 <_puts_r+0xd4>)
 8000582:	429c      	cmp	r4, r3
 8000584:	d101      	bne.n	800058a <_puts_r+0x6e>
 8000586:	68ac      	ldr	r4, [r5, #8]
 8000588:	e7da      	b.n	8000540 <_puts_r+0x24>
 800058a:	4b1a      	ldr	r3, [pc, #104]	; (80005f4 <_puts_r+0xd8>)
 800058c:	429c      	cmp	r4, r3
 800058e:	bf08      	it	eq
 8000590:	68ec      	ldreq	r4, [r5, #12]
 8000592:	e7d5      	b.n	8000540 <_puts_r+0x24>
 8000594:	4621      	mov	r1, r4
 8000596:	4628      	mov	r0, r5
 8000598:	f000 f888 	bl	80006ac <__swsetup_r>
 800059c:	2800      	cmp	r0, #0
 800059e:	d0dd      	beq.n	800055c <_puts_r+0x40>
 80005a0:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80005a4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80005a6:	07da      	lsls	r2, r3, #31
 80005a8:	d405      	bmi.n	80005b6 <_puts_r+0x9a>
 80005aa:	89a3      	ldrh	r3, [r4, #12]
 80005ac:	059b      	lsls	r3, r3, #22
 80005ae:	d402      	bmi.n	80005b6 <_puts_r+0x9a>
 80005b0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005b2:	f000 fa9e 	bl	8000af2 <__retarget_lock_release_recursive>
 80005b6:	4628      	mov	r0, r5
 80005b8:	bd70      	pop	{r4, r5, r6, pc}
 80005ba:	2b00      	cmp	r3, #0
 80005bc:	da04      	bge.n	80005c8 <_puts_r+0xac>
 80005be:	69a2      	ldr	r2, [r4, #24]
 80005c0:	429a      	cmp	r2, r3
 80005c2:	dc06      	bgt.n	80005d2 <_puts_r+0xb6>
 80005c4:	290a      	cmp	r1, #10
 80005c6:	d004      	beq.n	80005d2 <_puts_r+0xb6>
 80005c8:	6823      	ldr	r3, [r4, #0]
 80005ca:	1c5a      	adds	r2, r3, #1
 80005cc:	6022      	str	r2, [r4, #0]
 80005ce:	7019      	strb	r1, [r3, #0]
 80005d0:	e7c5      	b.n	800055e <_puts_r+0x42>
 80005d2:	4622      	mov	r2, r4
 80005d4:	4628      	mov	r0, r5
 80005d6:	f000 f817 	bl	8000608 <__swbuf_r>
 80005da:	3001      	adds	r0, #1
 80005dc:	d1bf      	bne.n	800055e <_puts_r+0x42>
 80005de:	e7df      	b.n	80005a0 <_puts_r+0x84>
 80005e0:	6823      	ldr	r3, [r4, #0]
 80005e2:	250a      	movs	r5, #10
 80005e4:	1c5a      	adds	r2, r3, #1
 80005e6:	6022      	str	r2, [r4, #0]
 80005e8:	701d      	strb	r5, [r3, #0]
 80005ea:	e7db      	b.n	80005a4 <_puts_r+0x88>
 80005ec:	08000f74 	.word	0x08000f74
 80005f0:	08000f94 	.word	0x08000f94
 80005f4:	08000f54 	.word	0x08000f54

080005f8 <puts>:
 80005f8:	4b02      	ldr	r3, [pc, #8]	; (8000604 <puts+0xc>)
 80005fa:	4601      	mov	r1, r0
 80005fc:	6818      	ldr	r0, [r3, #0]
 80005fe:	f7ff bf8d 	b.w	800051c <_puts_r>
 8000602:	bf00      	nop
 8000604:	2000000c 	.word	0x2000000c

08000608 <__swbuf_r>:
 8000608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800060a:	460e      	mov	r6, r1
 800060c:	4614      	mov	r4, r2
 800060e:	4605      	mov	r5, r0
 8000610:	b118      	cbz	r0, 800061a <__swbuf_r+0x12>
 8000612:	6983      	ldr	r3, [r0, #24]
 8000614:	b90b      	cbnz	r3, 800061a <__swbuf_r+0x12>
 8000616:	f000 f9cd 	bl	80009b4 <__sinit>
 800061a:	4b21      	ldr	r3, [pc, #132]	; (80006a0 <__swbuf_r+0x98>)
 800061c:	429c      	cmp	r4, r3
 800061e:	d12b      	bne.n	8000678 <__swbuf_r+0x70>
 8000620:	686c      	ldr	r4, [r5, #4]
 8000622:	69a3      	ldr	r3, [r4, #24]
 8000624:	60a3      	str	r3, [r4, #8]
 8000626:	89a3      	ldrh	r3, [r4, #12]
 8000628:	071a      	lsls	r2, r3, #28
 800062a:	d52f      	bpl.n	800068c <__swbuf_r+0x84>
 800062c:	6923      	ldr	r3, [r4, #16]
 800062e:	b36b      	cbz	r3, 800068c <__swbuf_r+0x84>
 8000630:	6923      	ldr	r3, [r4, #16]
 8000632:	6820      	ldr	r0, [r4, #0]
 8000634:	1ac0      	subs	r0, r0, r3
 8000636:	6963      	ldr	r3, [r4, #20]
 8000638:	b2f6      	uxtb	r6, r6
 800063a:	4283      	cmp	r3, r0
 800063c:	4637      	mov	r7, r6
 800063e:	dc04      	bgt.n	800064a <__swbuf_r+0x42>
 8000640:	4621      	mov	r1, r4
 8000642:	4628      	mov	r0, r5
 8000644:	f000 f922 	bl	800088c <_fflush_r>
 8000648:	bb30      	cbnz	r0, 8000698 <__swbuf_r+0x90>
 800064a:	68a3      	ldr	r3, [r4, #8]
 800064c:	3b01      	subs	r3, #1
 800064e:	60a3      	str	r3, [r4, #8]
 8000650:	6823      	ldr	r3, [r4, #0]
 8000652:	1c5a      	adds	r2, r3, #1
 8000654:	6022      	str	r2, [r4, #0]
 8000656:	701e      	strb	r6, [r3, #0]
 8000658:	6963      	ldr	r3, [r4, #20]
 800065a:	3001      	adds	r0, #1
 800065c:	4283      	cmp	r3, r0
 800065e:	d004      	beq.n	800066a <__swbuf_r+0x62>
 8000660:	89a3      	ldrh	r3, [r4, #12]
 8000662:	07db      	lsls	r3, r3, #31
 8000664:	d506      	bpl.n	8000674 <__swbuf_r+0x6c>
 8000666:	2e0a      	cmp	r6, #10
 8000668:	d104      	bne.n	8000674 <__swbuf_r+0x6c>
 800066a:	4621      	mov	r1, r4
 800066c:	4628      	mov	r0, r5
 800066e:	f000 f90d 	bl	800088c <_fflush_r>
 8000672:	b988      	cbnz	r0, 8000698 <__swbuf_r+0x90>
 8000674:	4638      	mov	r0, r7
 8000676:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000678:	4b0a      	ldr	r3, [pc, #40]	; (80006a4 <__swbuf_r+0x9c>)
 800067a:	429c      	cmp	r4, r3
 800067c:	d101      	bne.n	8000682 <__swbuf_r+0x7a>
 800067e:	68ac      	ldr	r4, [r5, #8]
 8000680:	e7cf      	b.n	8000622 <__swbuf_r+0x1a>
 8000682:	4b09      	ldr	r3, [pc, #36]	; (80006a8 <__swbuf_r+0xa0>)
 8000684:	429c      	cmp	r4, r3
 8000686:	bf08      	it	eq
 8000688:	68ec      	ldreq	r4, [r5, #12]
 800068a:	e7ca      	b.n	8000622 <__swbuf_r+0x1a>
 800068c:	4621      	mov	r1, r4
 800068e:	4628      	mov	r0, r5
 8000690:	f000 f80c 	bl	80006ac <__swsetup_r>
 8000694:	2800      	cmp	r0, #0
 8000696:	d0cb      	beq.n	8000630 <__swbuf_r+0x28>
 8000698:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800069c:	e7ea      	b.n	8000674 <__swbuf_r+0x6c>
 800069e:	bf00      	nop
 80006a0:	08000f74 	.word	0x08000f74
 80006a4:	08000f94 	.word	0x08000f94
 80006a8:	08000f54 	.word	0x08000f54

080006ac <__swsetup_r>:
 80006ac:	4b32      	ldr	r3, [pc, #200]	; (8000778 <__swsetup_r+0xcc>)
 80006ae:	b570      	push	{r4, r5, r6, lr}
 80006b0:	681d      	ldr	r5, [r3, #0]
 80006b2:	4606      	mov	r6, r0
 80006b4:	460c      	mov	r4, r1
 80006b6:	b125      	cbz	r5, 80006c2 <__swsetup_r+0x16>
 80006b8:	69ab      	ldr	r3, [r5, #24]
 80006ba:	b913      	cbnz	r3, 80006c2 <__swsetup_r+0x16>
 80006bc:	4628      	mov	r0, r5
 80006be:	f000 f979 	bl	80009b4 <__sinit>
 80006c2:	4b2e      	ldr	r3, [pc, #184]	; (800077c <__swsetup_r+0xd0>)
 80006c4:	429c      	cmp	r4, r3
 80006c6:	d10f      	bne.n	80006e8 <__swsetup_r+0x3c>
 80006c8:	686c      	ldr	r4, [r5, #4]
 80006ca:	89a3      	ldrh	r3, [r4, #12]
 80006cc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006d0:	0719      	lsls	r1, r3, #28
 80006d2:	d42c      	bmi.n	800072e <__swsetup_r+0x82>
 80006d4:	06dd      	lsls	r5, r3, #27
 80006d6:	d411      	bmi.n	80006fc <__swsetup_r+0x50>
 80006d8:	2309      	movs	r3, #9
 80006da:	6033      	str	r3, [r6, #0]
 80006dc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80006e0:	81a3      	strh	r3, [r4, #12]
 80006e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80006e6:	e03e      	b.n	8000766 <__swsetup_r+0xba>
 80006e8:	4b25      	ldr	r3, [pc, #148]	; (8000780 <__swsetup_r+0xd4>)
 80006ea:	429c      	cmp	r4, r3
 80006ec:	d101      	bne.n	80006f2 <__swsetup_r+0x46>
 80006ee:	68ac      	ldr	r4, [r5, #8]
 80006f0:	e7eb      	b.n	80006ca <__swsetup_r+0x1e>
 80006f2:	4b24      	ldr	r3, [pc, #144]	; (8000784 <__swsetup_r+0xd8>)
 80006f4:	429c      	cmp	r4, r3
 80006f6:	bf08      	it	eq
 80006f8:	68ec      	ldreq	r4, [r5, #12]
 80006fa:	e7e6      	b.n	80006ca <__swsetup_r+0x1e>
 80006fc:	0758      	lsls	r0, r3, #29
 80006fe:	d512      	bpl.n	8000726 <__swsetup_r+0x7a>
 8000700:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000702:	b141      	cbz	r1, 8000716 <__swsetup_r+0x6a>
 8000704:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000708:	4299      	cmp	r1, r3
 800070a:	d002      	beq.n	8000712 <__swsetup_r+0x66>
 800070c:	4630      	mov	r0, r6
 800070e:	f000 fa57 	bl	8000bc0 <_free_r>
 8000712:	2300      	movs	r3, #0
 8000714:	6363      	str	r3, [r4, #52]	; 0x34
 8000716:	89a3      	ldrh	r3, [r4, #12]
 8000718:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800071c:	81a3      	strh	r3, [r4, #12]
 800071e:	2300      	movs	r3, #0
 8000720:	6063      	str	r3, [r4, #4]
 8000722:	6923      	ldr	r3, [r4, #16]
 8000724:	6023      	str	r3, [r4, #0]
 8000726:	89a3      	ldrh	r3, [r4, #12]
 8000728:	f043 0308 	orr.w	r3, r3, #8
 800072c:	81a3      	strh	r3, [r4, #12]
 800072e:	6923      	ldr	r3, [r4, #16]
 8000730:	b94b      	cbnz	r3, 8000746 <__swsetup_r+0x9a>
 8000732:	89a3      	ldrh	r3, [r4, #12]
 8000734:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8000738:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800073c:	d003      	beq.n	8000746 <__swsetup_r+0x9a>
 800073e:	4621      	mov	r1, r4
 8000740:	4630      	mov	r0, r6
 8000742:	f000 f9fd 	bl	8000b40 <__smakebuf_r>
 8000746:	89a0      	ldrh	r0, [r4, #12]
 8000748:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800074c:	f010 0301 	ands.w	r3, r0, #1
 8000750:	d00a      	beq.n	8000768 <__swsetup_r+0xbc>
 8000752:	2300      	movs	r3, #0
 8000754:	60a3      	str	r3, [r4, #8]
 8000756:	6963      	ldr	r3, [r4, #20]
 8000758:	425b      	negs	r3, r3
 800075a:	61a3      	str	r3, [r4, #24]
 800075c:	6923      	ldr	r3, [r4, #16]
 800075e:	b943      	cbnz	r3, 8000772 <__swsetup_r+0xc6>
 8000760:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8000764:	d1ba      	bne.n	80006dc <__swsetup_r+0x30>
 8000766:	bd70      	pop	{r4, r5, r6, pc}
 8000768:	0781      	lsls	r1, r0, #30
 800076a:	bf58      	it	pl
 800076c:	6963      	ldrpl	r3, [r4, #20]
 800076e:	60a3      	str	r3, [r4, #8]
 8000770:	e7f4      	b.n	800075c <__swsetup_r+0xb0>
 8000772:	2000      	movs	r0, #0
 8000774:	e7f7      	b.n	8000766 <__swsetup_r+0xba>
 8000776:	bf00      	nop
 8000778:	2000000c 	.word	0x2000000c
 800077c:	08000f74 	.word	0x08000f74
 8000780:	08000f94 	.word	0x08000f94
 8000784:	08000f54 	.word	0x08000f54

08000788 <__sflush_r>:
 8000788:	898a      	ldrh	r2, [r1, #12]
 800078a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800078c:	4605      	mov	r5, r0
 800078e:	0710      	lsls	r0, r2, #28
 8000790:	460c      	mov	r4, r1
 8000792:	d457      	bmi.n	8000844 <__sflush_r+0xbc>
 8000794:	684b      	ldr	r3, [r1, #4]
 8000796:	2b00      	cmp	r3, #0
 8000798:	dc04      	bgt.n	80007a4 <__sflush_r+0x1c>
 800079a:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800079c:	2b00      	cmp	r3, #0
 800079e:	dc01      	bgt.n	80007a4 <__sflush_r+0x1c>
 80007a0:	2000      	movs	r0, #0
 80007a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80007a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007a6:	2e00      	cmp	r6, #0
 80007a8:	d0fa      	beq.n	80007a0 <__sflush_r+0x18>
 80007aa:	2300      	movs	r3, #0
 80007ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80007b0:	682f      	ldr	r7, [r5, #0]
 80007b2:	602b      	str	r3, [r5, #0]
 80007b4:	d032      	beq.n	800081c <__sflush_r+0x94>
 80007b6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80007b8:	89a3      	ldrh	r3, [r4, #12]
 80007ba:	075a      	lsls	r2, r3, #29
 80007bc:	d505      	bpl.n	80007ca <__sflush_r+0x42>
 80007be:	6863      	ldr	r3, [r4, #4]
 80007c0:	1ac0      	subs	r0, r0, r3
 80007c2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80007c4:	b10b      	cbz	r3, 80007ca <__sflush_r+0x42>
 80007c6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80007c8:	1ac0      	subs	r0, r0, r3
 80007ca:	2300      	movs	r3, #0
 80007cc:	4602      	mov	r2, r0
 80007ce:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80007d0:	6a21      	ldr	r1, [r4, #32]
 80007d2:	4628      	mov	r0, r5
 80007d4:	47b0      	blx	r6
 80007d6:	1c43      	adds	r3, r0, #1
 80007d8:	89a3      	ldrh	r3, [r4, #12]
 80007da:	d106      	bne.n	80007ea <__sflush_r+0x62>
 80007dc:	6829      	ldr	r1, [r5, #0]
 80007de:	291d      	cmp	r1, #29
 80007e0:	d82c      	bhi.n	800083c <__sflush_r+0xb4>
 80007e2:	4a29      	ldr	r2, [pc, #164]	; (8000888 <__sflush_r+0x100>)
 80007e4:	40ca      	lsrs	r2, r1
 80007e6:	07d6      	lsls	r6, r2, #31
 80007e8:	d528      	bpl.n	800083c <__sflush_r+0xb4>
 80007ea:	2200      	movs	r2, #0
 80007ec:	6062      	str	r2, [r4, #4]
 80007ee:	04d9      	lsls	r1, r3, #19
 80007f0:	6922      	ldr	r2, [r4, #16]
 80007f2:	6022      	str	r2, [r4, #0]
 80007f4:	d504      	bpl.n	8000800 <__sflush_r+0x78>
 80007f6:	1c42      	adds	r2, r0, #1
 80007f8:	d101      	bne.n	80007fe <__sflush_r+0x76>
 80007fa:	682b      	ldr	r3, [r5, #0]
 80007fc:	b903      	cbnz	r3, 8000800 <__sflush_r+0x78>
 80007fe:	6560      	str	r0, [r4, #84]	; 0x54
 8000800:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000802:	602f      	str	r7, [r5, #0]
 8000804:	2900      	cmp	r1, #0
 8000806:	d0cb      	beq.n	80007a0 <__sflush_r+0x18>
 8000808:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800080c:	4299      	cmp	r1, r3
 800080e:	d002      	beq.n	8000816 <__sflush_r+0x8e>
 8000810:	4628      	mov	r0, r5
 8000812:	f000 f9d5 	bl	8000bc0 <_free_r>
 8000816:	2000      	movs	r0, #0
 8000818:	6360      	str	r0, [r4, #52]	; 0x34
 800081a:	e7c2      	b.n	80007a2 <__sflush_r+0x1a>
 800081c:	6a21      	ldr	r1, [r4, #32]
 800081e:	2301      	movs	r3, #1
 8000820:	4628      	mov	r0, r5
 8000822:	47b0      	blx	r6
 8000824:	1c41      	adds	r1, r0, #1
 8000826:	d1c7      	bne.n	80007b8 <__sflush_r+0x30>
 8000828:	682b      	ldr	r3, [r5, #0]
 800082a:	2b00      	cmp	r3, #0
 800082c:	d0c4      	beq.n	80007b8 <__sflush_r+0x30>
 800082e:	2b1d      	cmp	r3, #29
 8000830:	d001      	beq.n	8000836 <__sflush_r+0xae>
 8000832:	2b16      	cmp	r3, #22
 8000834:	d101      	bne.n	800083a <__sflush_r+0xb2>
 8000836:	602f      	str	r7, [r5, #0]
 8000838:	e7b2      	b.n	80007a0 <__sflush_r+0x18>
 800083a:	89a3      	ldrh	r3, [r4, #12]
 800083c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000840:	81a3      	strh	r3, [r4, #12]
 8000842:	e7ae      	b.n	80007a2 <__sflush_r+0x1a>
 8000844:	690f      	ldr	r7, [r1, #16]
 8000846:	2f00      	cmp	r7, #0
 8000848:	d0aa      	beq.n	80007a0 <__sflush_r+0x18>
 800084a:	0793      	lsls	r3, r2, #30
 800084c:	680e      	ldr	r6, [r1, #0]
 800084e:	bf08      	it	eq
 8000850:	694b      	ldreq	r3, [r1, #20]
 8000852:	600f      	str	r7, [r1, #0]
 8000854:	bf18      	it	ne
 8000856:	2300      	movne	r3, #0
 8000858:	1bf6      	subs	r6, r6, r7
 800085a:	608b      	str	r3, [r1, #8]
 800085c:	2e00      	cmp	r6, #0
 800085e:	dd9f      	ble.n	80007a0 <__sflush_r+0x18>
 8000860:	6a21      	ldr	r1, [r4, #32]
 8000862:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8000866:	4633      	mov	r3, r6
 8000868:	463a      	mov	r2, r7
 800086a:	4628      	mov	r0, r5
 800086c:	47e0      	blx	ip
 800086e:	2800      	cmp	r0, #0
 8000870:	dc06      	bgt.n	8000880 <__sflush_r+0xf8>
 8000872:	89a3      	ldrh	r3, [r4, #12]
 8000874:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000878:	81a3      	strh	r3, [r4, #12]
 800087a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800087e:	e790      	b.n	80007a2 <__sflush_r+0x1a>
 8000880:	4407      	add	r7, r0
 8000882:	1a36      	subs	r6, r6, r0
 8000884:	e7ea      	b.n	800085c <__sflush_r+0xd4>
 8000886:	bf00      	nop
 8000888:	20400001 	.word	0x20400001

0800088c <_fflush_r>:
 800088c:	b538      	push	{r3, r4, r5, lr}
 800088e:	690b      	ldr	r3, [r1, #16]
 8000890:	4605      	mov	r5, r0
 8000892:	460c      	mov	r4, r1
 8000894:	b913      	cbnz	r3, 800089c <_fflush_r+0x10>
 8000896:	2500      	movs	r5, #0
 8000898:	4628      	mov	r0, r5
 800089a:	bd38      	pop	{r3, r4, r5, pc}
 800089c:	b118      	cbz	r0, 80008a6 <_fflush_r+0x1a>
 800089e:	6983      	ldr	r3, [r0, #24]
 80008a0:	b90b      	cbnz	r3, 80008a6 <_fflush_r+0x1a>
 80008a2:	f000 f887 	bl	80009b4 <__sinit>
 80008a6:	4b14      	ldr	r3, [pc, #80]	; (80008f8 <_fflush_r+0x6c>)
 80008a8:	429c      	cmp	r4, r3
 80008aa:	d11b      	bne.n	80008e4 <_fflush_r+0x58>
 80008ac:	686c      	ldr	r4, [r5, #4]
 80008ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80008b2:	2b00      	cmp	r3, #0
 80008b4:	d0ef      	beq.n	8000896 <_fflush_r+0xa>
 80008b6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80008b8:	07d0      	lsls	r0, r2, #31
 80008ba:	d404      	bmi.n	80008c6 <_fflush_r+0x3a>
 80008bc:	0599      	lsls	r1, r3, #22
 80008be:	d402      	bmi.n	80008c6 <_fflush_r+0x3a>
 80008c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008c2:	f000 f915 	bl	8000af0 <__retarget_lock_acquire_recursive>
 80008c6:	4628      	mov	r0, r5
 80008c8:	4621      	mov	r1, r4
 80008ca:	f7ff ff5d 	bl	8000788 <__sflush_r>
 80008ce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80008d0:	07da      	lsls	r2, r3, #31
 80008d2:	4605      	mov	r5, r0
 80008d4:	d4e0      	bmi.n	8000898 <_fflush_r+0xc>
 80008d6:	89a3      	ldrh	r3, [r4, #12]
 80008d8:	059b      	lsls	r3, r3, #22
 80008da:	d4dd      	bmi.n	8000898 <_fflush_r+0xc>
 80008dc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80008de:	f000 f908 	bl	8000af2 <__retarget_lock_release_recursive>
 80008e2:	e7d9      	b.n	8000898 <_fflush_r+0xc>
 80008e4:	4b05      	ldr	r3, [pc, #20]	; (80008fc <_fflush_r+0x70>)
 80008e6:	429c      	cmp	r4, r3
 80008e8:	d101      	bne.n	80008ee <_fflush_r+0x62>
 80008ea:	68ac      	ldr	r4, [r5, #8]
 80008ec:	e7df      	b.n	80008ae <_fflush_r+0x22>
 80008ee:	4b04      	ldr	r3, [pc, #16]	; (8000900 <_fflush_r+0x74>)
 80008f0:	429c      	cmp	r4, r3
 80008f2:	bf08      	it	eq
 80008f4:	68ec      	ldreq	r4, [r5, #12]
 80008f6:	e7da      	b.n	80008ae <_fflush_r+0x22>
 80008f8:	08000f74 	.word	0x08000f74
 80008fc:	08000f94 	.word	0x08000f94
 8000900:	08000f54 	.word	0x08000f54

08000904 <std>:
 8000904:	2300      	movs	r3, #0
 8000906:	b510      	push	{r4, lr}
 8000908:	4604      	mov	r4, r0
 800090a:	e9c0 3300 	strd	r3, r3, [r0]
 800090e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000912:	6083      	str	r3, [r0, #8]
 8000914:	8181      	strh	r1, [r0, #12]
 8000916:	6643      	str	r3, [r0, #100]	; 0x64
 8000918:	81c2      	strh	r2, [r0, #14]
 800091a:	6183      	str	r3, [r0, #24]
 800091c:	4619      	mov	r1, r3
 800091e:	2208      	movs	r2, #8
 8000920:	305c      	adds	r0, #92	; 0x5c
 8000922:	f7ff fdf3 	bl	800050c <memset>
 8000926:	4b05      	ldr	r3, [pc, #20]	; (800093c <std+0x38>)
 8000928:	6263      	str	r3, [r4, #36]	; 0x24
 800092a:	4b05      	ldr	r3, [pc, #20]	; (8000940 <std+0x3c>)
 800092c:	62a3      	str	r3, [r4, #40]	; 0x28
 800092e:	4b05      	ldr	r3, [pc, #20]	; (8000944 <std+0x40>)
 8000930:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000932:	4b05      	ldr	r3, [pc, #20]	; (8000948 <std+0x44>)
 8000934:	6224      	str	r4, [r4, #32]
 8000936:	6323      	str	r3, [r4, #48]	; 0x30
 8000938:	bd10      	pop	{r4, pc}
 800093a:	bf00      	nop
 800093c:	08000d9d 	.word	0x08000d9d
 8000940:	08000dbf 	.word	0x08000dbf
 8000944:	08000df7 	.word	0x08000df7
 8000948:	08000e1b 	.word	0x08000e1b

0800094c <_cleanup_r>:
 800094c:	4901      	ldr	r1, [pc, #4]	; (8000954 <_cleanup_r+0x8>)
 800094e:	f000 b8af 	b.w	8000ab0 <_fwalk_reent>
 8000952:	bf00      	nop
 8000954:	0800088d 	.word	0x0800088d

08000958 <__sfmoreglue>:
 8000958:	b570      	push	{r4, r5, r6, lr}
 800095a:	2268      	movs	r2, #104	; 0x68
 800095c:	1e4d      	subs	r5, r1, #1
 800095e:	4355      	muls	r5, r2
 8000960:	460e      	mov	r6, r1
 8000962:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000966:	f000 f995 	bl	8000c94 <_malloc_r>
 800096a:	4604      	mov	r4, r0
 800096c:	b140      	cbz	r0, 8000980 <__sfmoreglue+0x28>
 800096e:	2100      	movs	r1, #0
 8000970:	e9c0 1600 	strd	r1, r6, [r0]
 8000974:	300c      	adds	r0, #12
 8000976:	60a0      	str	r0, [r4, #8]
 8000978:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800097c:	f7ff fdc6 	bl	800050c <memset>
 8000980:	4620      	mov	r0, r4
 8000982:	bd70      	pop	{r4, r5, r6, pc}

08000984 <__sfp_lock_acquire>:
 8000984:	4801      	ldr	r0, [pc, #4]	; (800098c <__sfp_lock_acquire+0x8>)
 8000986:	f000 b8b3 	b.w	8000af0 <__retarget_lock_acquire_recursive>
 800098a:	bf00      	nop
 800098c:	20000091 	.word	0x20000091

08000990 <__sfp_lock_release>:
 8000990:	4801      	ldr	r0, [pc, #4]	; (8000998 <__sfp_lock_release+0x8>)
 8000992:	f000 b8ae 	b.w	8000af2 <__retarget_lock_release_recursive>
 8000996:	bf00      	nop
 8000998:	20000091 	.word	0x20000091

0800099c <__sinit_lock_acquire>:
 800099c:	4801      	ldr	r0, [pc, #4]	; (80009a4 <__sinit_lock_acquire+0x8>)
 800099e:	f000 b8a7 	b.w	8000af0 <__retarget_lock_acquire_recursive>
 80009a2:	bf00      	nop
 80009a4:	20000092 	.word	0x20000092

080009a8 <__sinit_lock_release>:
 80009a8:	4801      	ldr	r0, [pc, #4]	; (80009b0 <__sinit_lock_release+0x8>)
 80009aa:	f000 b8a2 	b.w	8000af2 <__retarget_lock_release_recursive>
 80009ae:	bf00      	nop
 80009b0:	20000092 	.word	0x20000092

080009b4 <__sinit>:
 80009b4:	b510      	push	{r4, lr}
 80009b6:	4604      	mov	r4, r0
 80009b8:	f7ff fff0 	bl	800099c <__sinit_lock_acquire>
 80009bc:	69a3      	ldr	r3, [r4, #24]
 80009be:	b11b      	cbz	r3, 80009c8 <__sinit+0x14>
 80009c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80009c4:	f7ff bff0 	b.w	80009a8 <__sinit_lock_release>
 80009c8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80009cc:	6523      	str	r3, [r4, #80]	; 0x50
 80009ce:	4b13      	ldr	r3, [pc, #76]	; (8000a1c <__sinit+0x68>)
 80009d0:	4a13      	ldr	r2, [pc, #76]	; (8000a20 <__sinit+0x6c>)
 80009d2:	681b      	ldr	r3, [r3, #0]
 80009d4:	62a2      	str	r2, [r4, #40]	; 0x28
 80009d6:	42a3      	cmp	r3, r4
 80009d8:	bf04      	itt	eq
 80009da:	2301      	moveq	r3, #1
 80009dc:	61a3      	streq	r3, [r4, #24]
 80009de:	4620      	mov	r0, r4
 80009e0:	f000 f820 	bl	8000a24 <__sfp>
 80009e4:	6060      	str	r0, [r4, #4]
 80009e6:	4620      	mov	r0, r4
 80009e8:	f000 f81c 	bl	8000a24 <__sfp>
 80009ec:	60a0      	str	r0, [r4, #8]
 80009ee:	4620      	mov	r0, r4
 80009f0:	f000 f818 	bl	8000a24 <__sfp>
 80009f4:	2200      	movs	r2, #0
 80009f6:	60e0      	str	r0, [r4, #12]
 80009f8:	2104      	movs	r1, #4
 80009fa:	6860      	ldr	r0, [r4, #4]
 80009fc:	f7ff ff82 	bl	8000904 <std>
 8000a00:	68a0      	ldr	r0, [r4, #8]
 8000a02:	2201      	movs	r2, #1
 8000a04:	2109      	movs	r1, #9
 8000a06:	f7ff ff7d 	bl	8000904 <std>
 8000a0a:	68e0      	ldr	r0, [r4, #12]
 8000a0c:	2202      	movs	r2, #2
 8000a0e:	2112      	movs	r1, #18
 8000a10:	f7ff ff78 	bl	8000904 <std>
 8000a14:	2301      	movs	r3, #1
 8000a16:	61a3      	str	r3, [r4, #24]
 8000a18:	e7d2      	b.n	80009c0 <__sinit+0xc>
 8000a1a:	bf00      	nop
 8000a1c:	08000f50 	.word	0x08000f50
 8000a20:	0800094d 	.word	0x0800094d

08000a24 <__sfp>:
 8000a24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a26:	4607      	mov	r7, r0
 8000a28:	f7ff ffac 	bl	8000984 <__sfp_lock_acquire>
 8000a2c:	4b1e      	ldr	r3, [pc, #120]	; (8000aa8 <__sfp+0x84>)
 8000a2e:	681e      	ldr	r6, [r3, #0]
 8000a30:	69b3      	ldr	r3, [r6, #24]
 8000a32:	b913      	cbnz	r3, 8000a3a <__sfp+0x16>
 8000a34:	4630      	mov	r0, r6
 8000a36:	f7ff ffbd 	bl	80009b4 <__sinit>
 8000a3a:	3648      	adds	r6, #72	; 0x48
 8000a3c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000a40:	3b01      	subs	r3, #1
 8000a42:	d503      	bpl.n	8000a4c <__sfp+0x28>
 8000a44:	6833      	ldr	r3, [r6, #0]
 8000a46:	b30b      	cbz	r3, 8000a8c <__sfp+0x68>
 8000a48:	6836      	ldr	r6, [r6, #0]
 8000a4a:	e7f7      	b.n	8000a3c <__sfp+0x18>
 8000a4c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000a50:	b9d5      	cbnz	r5, 8000a88 <__sfp+0x64>
 8000a52:	4b16      	ldr	r3, [pc, #88]	; (8000aac <__sfp+0x88>)
 8000a54:	60e3      	str	r3, [r4, #12]
 8000a56:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000a5a:	6665      	str	r5, [r4, #100]	; 0x64
 8000a5c:	f000 f847 	bl	8000aee <__retarget_lock_init_recursive>
 8000a60:	f7ff ff96 	bl	8000990 <__sfp_lock_release>
 8000a64:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000a68:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000a6c:	6025      	str	r5, [r4, #0]
 8000a6e:	61a5      	str	r5, [r4, #24]
 8000a70:	2208      	movs	r2, #8
 8000a72:	4629      	mov	r1, r5
 8000a74:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a78:	f7ff fd48 	bl	800050c <memset>
 8000a7c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a80:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a84:	4620      	mov	r0, r4
 8000a86:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a88:	3468      	adds	r4, #104	; 0x68
 8000a8a:	e7d9      	b.n	8000a40 <__sfp+0x1c>
 8000a8c:	2104      	movs	r1, #4
 8000a8e:	4638      	mov	r0, r7
 8000a90:	f7ff ff62 	bl	8000958 <__sfmoreglue>
 8000a94:	4604      	mov	r4, r0
 8000a96:	6030      	str	r0, [r6, #0]
 8000a98:	2800      	cmp	r0, #0
 8000a9a:	d1d5      	bne.n	8000a48 <__sfp+0x24>
 8000a9c:	f7ff ff78 	bl	8000990 <__sfp_lock_release>
 8000aa0:	230c      	movs	r3, #12
 8000aa2:	603b      	str	r3, [r7, #0]
 8000aa4:	e7ee      	b.n	8000a84 <__sfp+0x60>
 8000aa6:	bf00      	nop
 8000aa8:	08000f50 	.word	0x08000f50
 8000aac:	ffff0001 	.word	0xffff0001

08000ab0 <_fwalk_reent>:
 8000ab0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000ab4:	4606      	mov	r6, r0
 8000ab6:	4688      	mov	r8, r1
 8000ab8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000abc:	2700      	movs	r7, #0
 8000abe:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000ac2:	f1b9 0901 	subs.w	r9, r9, #1
 8000ac6:	d505      	bpl.n	8000ad4 <_fwalk_reent+0x24>
 8000ac8:	6824      	ldr	r4, [r4, #0]
 8000aca:	2c00      	cmp	r4, #0
 8000acc:	d1f7      	bne.n	8000abe <_fwalk_reent+0xe>
 8000ace:	4638      	mov	r0, r7
 8000ad0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000ad4:	89ab      	ldrh	r3, [r5, #12]
 8000ad6:	2b01      	cmp	r3, #1
 8000ad8:	d907      	bls.n	8000aea <_fwalk_reent+0x3a>
 8000ada:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000ade:	3301      	adds	r3, #1
 8000ae0:	d003      	beq.n	8000aea <_fwalk_reent+0x3a>
 8000ae2:	4629      	mov	r1, r5
 8000ae4:	4630      	mov	r0, r6
 8000ae6:	47c0      	blx	r8
 8000ae8:	4307      	orrs	r7, r0
 8000aea:	3568      	adds	r5, #104	; 0x68
 8000aec:	e7e9      	b.n	8000ac2 <_fwalk_reent+0x12>

08000aee <__retarget_lock_init_recursive>:
 8000aee:	4770      	bx	lr

08000af0 <__retarget_lock_acquire_recursive>:
 8000af0:	4770      	bx	lr

08000af2 <__retarget_lock_release_recursive>:
 8000af2:	4770      	bx	lr

08000af4 <__swhatbuf_r>:
 8000af4:	b570      	push	{r4, r5, r6, lr}
 8000af6:	460e      	mov	r6, r1
 8000af8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000afc:	2900      	cmp	r1, #0
 8000afe:	b096      	sub	sp, #88	; 0x58
 8000b00:	4614      	mov	r4, r2
 8000b02:	461d      	mov	r5, r3
 8000b04:	da08      	bge.n	8000b18 <__swhatbuf_r+0x24>
 8000b06:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	602a      	str	r2, [r5, #0]
 8000b0e:	061a      	lsls	r2, r3, #24
 8000b10:	d410      	bmi.n	8000b34 <__swhatbuf_r+0x40>
 8000b12:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b16:	e00e      	b.n	8000b36 <__swhatbuf_r+0x42>
 8000b18:	466a      	mov	r2, sp
 8000b1a:	f000 f9a5 	bl	8000e68 <_fstat_r>
 8000b1e:	2800      	cmp	r0, #0
 8000b20:	dbf1      	blt.n	8000b06 <__swhatbuf_r+0x12>
 8000b22:	9a01      	ldr	r2, [sp, #4]
 8000b24:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000b28:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000b2c:	425a      	negs	r2, r3
 8000b2e:	415a      	adcs	r2, r3
 8000b30:	602a      	str	r2, [r5, #0]
 8000b32:	e7ee      	b.n	8000b12 <__swhatbuf_r+0x1e>
 8000b34:	2340      	movs	r3, #64	; 0x40
 8000b36:	2000      	movs	r0, #0
 8000b38:	6023      	str	r3, [r4, #0]
 8000b3a:	b016      	add	sp, #88	; 0x58
 8000b3c:	bd70      	pop	{r4, r5, r6, pc}
	...

08000b40 <__smakebuf_r>:
 8000b40:	898b      	ldrh	r3, [r1, #12]
 8000b42:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000b44:	079d      	lsls	r5, r3, #30
 8000b46:	4606      	mov	r6, r0
 8000b48:	460c      	mov	r4, r1
 8000b4a:	d507      	bpl.n	8000b5c <__smakebuf_r+0x1c>
 8000b4c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000b50:	6023      	str	r3, [r4, #0]
 8000b52:	6123      	str	r3, [r4, #16]
 8000b54:	2301      	movs	r3, #1
 8000b56:	6163      	str	r3, [r4, #20]
 8000b58:	b002      	add	sp, #8
 8000b5a:	bd70      	pop	{r4, r5, r6, pc}
 8000b5c:	ab01      	add	r3, sp, #4
 8000b5e:	466a      	mov	r2, sp
 8000b60:	f7ff ffc8 	bl	8000af4 <__swhatbuf_r>
 8000b64:	9900      	ldr	r1, [sp, #0]
 8000b66:	4605      	mov	r5, r0
 8000b68:	4630      	mov	r0, r6
 8000b6a:	f000 f893 	bl	8000c94 <_malloc_r>
 8000b6e:	b948      	cbnz	r0, 8000b84 <__smakebuf_r+0x44>
 8000b70:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b74:	059a      	lsls	r2, r3, #22
 8000b76:	d4ef      	bmi.n	8000b58 <__smakebuf_r+0x18>
 8000b78:	f023 0303 	bic.w	r3, r3, #3
 8000b7c:	f043 0302 	orr.w	r3, r3, #2
 8000b80:	81a3      	strh	r3, [r4, #12]
 8000b82:	e7e3      	b.n	8000b4c <__smakebuf_r+0xc>
 8000b84:	4b0d      	ldr	r3, [pc, #52]	; (8000bbc <__smakebuf_r+0x7c>)
 8000b86:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b88:	89a3      	ldrh	r3, [r4, #12]
 8000b8a:	6020      	str	r0, [r4, #0]
 8000b8c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b90:	81a3      	strh	r3, [r4, #12]
 8000b92:	9b00      	ldr	r3, [sp, #0]
 8000b94:	6163      	str	r3, [r4, #20]
 8000b96:	9b01      	ldr	r3, [sp, #4]
 8000b98:	6120      	str	r0, [r4, #16]
 8000b9a:	b15b      	cbz	r3, 8000bb4 <__smakebuf_r+0x74>
 8000b9c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000ba0:	4630      	mov	r0, r6
 8000ba2:	f000 f973 	bl	8000e8c <_isatty_r>
 8000ba6:	b128      	cbz	r0, 8000bb4 <__smakebuf_r+0x74>
 8000ba8:	89a3      	ldrh	r3, [r4, #12]
 8000baa:	f023 0303 	bic.w	r3, r3, #3
 8000bae:	f043 0301 	orr.w	r3, r3, #1
 8000bb2:	81a3      	strh	r3, [r4, #12]
 8000bb4:	89a0      	ldrh	r0, [r4, #12]
 8000bb6:	4305      	orrs	r5, r0
 8000bb8:	81a5      	strh	r5, [r4, #12]
 8000bba:	e7cd      	b.n	8000b58 <__smakebuf_r+0x18>
 8000bbc:	0800094d 	.word	0x0800094d

08000bc0 <_free_r>:
 8000bc0:	b538      	push	{r3, r4, r5, lr}
 8000bc2:	4605      	mov	r5, r0
 8000bc4:	2900      	cmp	r1, #0
 8000bc6:	d041      	beq.n	8000c4c <_free_r+0x8c>
 8000bc8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bcc:	1f0c      	subs	r4, r1, #4
 8000bce:	2b00      	cmp	r3, #0
 8000bd0:	bfb8      	it	lt
 8000bd2:	18e4      	addlt	r4, r4, r3
 8000bd4:	f000 f97c 	bl	8000ed0 <__malloc_lock>
 8000bd8:	4a1d      	ldr	r2, [pc, #116]	; (8000c50 <_free_r+0x90>)
 8000bda:	6813      	ldr	r3, [r2, #0]
 8000bdc:	b933      	cbnz	r3, 8000bec <_free_r+0x2c>
 8000bde:	6063      	str	r3, [r4, #4]
 8000be0:	6014      	str	r4, [r2, #0]
 8000be2:	4628      	mov	r0, r5
 8000be4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000be8:	f000 b978 	b.w	8000edc <__malloc_unlock>
 8000bec:	42a3      	cmp	r3, r4
 8000bee:	d908      	bls.n	8000c02 <_free_r+0x42>
 8000bf0:	6820      	ldr	r0, [r4, #0]
 8000bf2:	1821      	adds	r1, r4, r0
 8000bf4:	428b      	cmp	r3, r1
 8000bf6:	bf01      	itttt	eq
 8000bf8:	6819      	ldreq	r1, [r3, #0]
 8000bfa:	685b      	ldreq	r3, [r3, #4]
 8000bfc:	1809      	addeq	r1, r1, r0
 8000bfe:	6021      	streq	r1, [r4, #0]
 8000c00:	e7ed      	b.n	8000bde <_free_r+0x1e>
 8000c02:	461a      	mov	r2, r3
 8000c04:	685b      	ldr	r3, [r3, #4]
 8000c06:	b10b      	cbz	r3, 8000c0c <_free_r+0x4c>
 8000c08:	42a3      	cmp	r3, r4
 8000c0a:	d9fa      	bls.n	8000c02 <_free_r+0x42>
 8000c0c:	6811      	ldr	r1, [r2, #0]
 8000c0e:	1850      	adds	r0, r2, r1
 8000c10:	42a0      	cmp	r0, r4
 8000c12:	d10b      	bne.n	8000c2c <_free_r+0x6c>
 8000c14:	6820      	ldr	r0, [r4, #0]
 8000c16:	4401      	add	r1, r0
 8000c18:	1850      	adds	r0, r2, r1
 8000c1a:	4283      	cmp	r3, r0
 8000c1c:	6011      	str	r1, [r2, #0]
 8000c1e:	d1e0      	bne.n	8000be2 <_free_r+0x22>
 8000c20:	6818      	ldr	r0, [r3, #0]
 8000c22:	685b      	ldr	r3, [r3, #4]
 8000c24:	6053      	str	r3, [r2, #4]
 8000c26:	4401      	add	r1, r0
 8000c28:	6011      	str	r1, [r2, #0]
 8000c2a:	e7da      	b.n	8000be2 <_free_r+0x22>
 8000c2c:	d902      	bls.n	8000c34 <_free_r+0x74>
 8000c2e:	230c      	movs	r3, #12
 8000c30:	602b      	str	r3, [r5, #0]
 8000c32:	e7d6      	b.n	8000be2 <_free_r+0x22>
 8000c34:	6820      	ldr	r0, [r4, #0]
 8000c36:	1821      	adds	r1, r4, r0
 8000c38:	428b      	cmp	r3, r1
 8000c3a:	bf04      	itt	eq
 8000c3c:	6819      	ldreq	r1, [r3, #0]
 8000c3e:	685b      	ldreq	r3, [r3, #4]
 8000c40:	6063      	str	r3, [r4, #4]
 8000c42:	bf04      	itt	eq
 8000c44:	1809      	addeq	r1, r1, r0
 8000c46:	6021      	streq	r1, [r4, #0]
 8000c48:	6054      	str	r4, [r2, #4]
 8000c4a:	e7ca      	b.n	8000be2 <_free_r+0x22>
 8000c4c:	bd38      	pop	{r3, r4, r5, pc}
 8000c4e:	bf00      	nop
 8000c50:	20000094 	.word	0x20000094

08000c54 <sbrk_aligned>:
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	4e0e      	ldr	r6, [pc, #56]	; (8000c90 <sbrk_aligned+0x3c>)
 8000c58:	460c      	mov	r4, r1
 8000c5a:	6831      	ldr	r1, [r6, #0]
 8000c5c:	4605      	mov	r5, r0
 8000c5e:	b911      	cbnz	r1, 8000c66 <sbrk_aligned+0x12>
 8000c60:	f000 f88c 	bl	8000d7c <_sbrk_r>
 8000c64:	6030      	str	r0, [r6, #0]
 8000c66:	4621      	mov	r1, r4
 8000c68:	4628      	mov	r0, r5
 8000c6a:	f000 f887 	bl	8000d7c <_sbrk_r>
 8000c6e:	1c43      	adds	r3, r0, #1
 8000c70:	d00a      	beq.n	8000c88 <sbrk_aligned+0x34>
 8000c72:	1cc4      	adds	r4, r0, #3
 8000c74:	f024 0403 	bic.w	r4, r4, #3
 8000c78:	42a0      	cmp	r0, r4
 8000c7a:	d007      	beq.n	8000c8c <sbrk_aligned+0x38>
 8000c7c:	1a21      	subs	r1, r4, r0
 8000c7e:	4628      	mov	r0, r5
 8000c80:	f000 f87c 	bl	8000d7c <_sbrk_r>
 8000c84:	3001      	adds	r0, #1
 8000c86:	d101      	bne.n	8000c8c <sbrk_aligned+0x38>
 8000c88:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000c8c:	4620      	mov	r0, r4
 8000c8e:	bd70      	pop	{r4, r5, r6, pc}
 8000c90:	20000098 	.word	0x20000098

08000c94 <_malloc_r>:
 8000c94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c98:	1ccd      	adds	r5, r1, #3
 8000c9a:	f025 0503 	bic.w	r5, r5, #3
 8000c9e:	3508      	adds	r5, #8
 8000ca0:	2d0c      	cmp	r5, #12
 8000ca2:	bf38      	it	cc
 8000ca4:	250c      	movcc	r5, #12
 8000ca6:	2d00      	cmp	r5, #0
 8000ca8:	4607      	mov	r7, r0
 8000caa:	db01      	blt.n	8000cb0 <_malloc_r+0x1c>
 8000cac:	42a9      	cmp	r1, r5
 8000cae:	d905      	bls.n	8000cbc <_malloc_r+0x28>
 8000cb0:	230c      	movs	r3, #12
 8000cb2:	603b      	str	r3, [r7, #0]
 8000cb4:	2600      	movs	r6, #0
 8000cb6:	4630      	mov	r0, r6
 8000cb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000cbc:	4e2e      	ldr	r6, [pc, #184]	; (8000d78 <_malloc_r+0xe4>)
 8000cbe:	f000 f907 	bl	8000ed0 <__malloc_lock>
 8000cc2:	6833      	ldr	r3, [r6, #0]
 8000cc4:	461c      	mov	r4, r3
 8000cc6:	bb34      	cbnz	r4, 8000d16 <_malloc_r+0x82>
 8000cc8:	4629      	mov	r1, r5
 8000cca:	4638      	mov	r0, r7
 8000ccc:	f7ff ffc2 	bl	8000c54 <sbrk_aligned>
 8000cd0:	1c43      	adds	r3, r0, #1
 8000cd2:	4604      	mov	r4, r0
 8000cd4:	d14d      	bne.n	8000d72 <_malloc_r+0xde>
 8000cd6:	6834      	ldr	r4, [r6, #0]
 8000cd8:	4626      	mov	r6, r4
 8000cda:	2e00      	cmp	r6, #0
 8000cdc:	d140      	bne.n	8000d60 <_malloc_r+0xcc>
 8000cde:	6823      	ldr	r3, [r4, #0]
 8000ce0:	4631      	mov	r1, r6
 8000ce2:	4638      	mov	r0, r7
 8000ce4:	eb04 0803 	add.w	r8, r4, r3
 8000ce8:	f000 f848 	bl	8000d7c <_sbrk_r>
 8000cec:	4580      	cmp	r8, r0
 8000cee:	d13a      	bne.n	8000d66 <_malloc_r+0xd2>
 8000cf0:	6821      	ldr	r1, [r4, #0]
 8000cf2:	3503      	adds	r5, #3
 8000cf4:	1a6d      	subs	r5, r5, r1
 8000cf6:	f025 0503 	bic.w	r5, r5, #3
 8000cfa:	3508      	adds	r5, #8
 8000cfc:	2d0c      	cmp	r5, #12
 8000cfe:	bf38      	it	cc
 8000d00:	250c      	movcc	r5, #12
 8000d02:	4629      	mov	r1, r5
 8000d04:	4638      	mov	r0, r7
 8000d06:	f7ff ffa5 	bl	8000c54 <sbrk_aligned>
 8000d0a:	3001      	adds	r0, #1
 8000d0c:	d02b      	beq.n	8000d66 <_malloc_r+0xd2>
 8000d0e:	6823      	ldr	r3, [r4, #0]
 8000d10:	442b      	add	r3, r5
 8000d12:	6023      	str	r3, [r4, #0]
 8000d14:	e00e      	b.n	8000d34 <_malloc_r+0xa0>
 8000d16:	6822      	ldr	r2, [r4, #0]
 8000d18:	1b52      	subs	r2, r2, r5
 8000d1a:	d41e      	bmi.n	8000d5a <_malloc_r+0xc6>
 8000d1c:	2a0b      	cmp	r2, #11
 8000d1e:	d916      	bls.n	8000d4e <_malloc_r+0xba>
 8000d20:	1961      	adds	r1, r4, r5
 8000d22:	42a3      	cmp	r3, r4
 8000d24:	6025      	str	r5, [r4, #0]
 8000d26:	bf18      	it	ne
 8000d28:	6059      	strne	r1, [r3, #4]
 8000d2a:	6863      	ldr	r3, [r4, #4]
 8000d2c:	bf08      	it	eq
 8000d2e:	6031      	streq	r1, [r6, #0]
 8000d30:	5162      	str	r2, [r4, r5]
 8000d32:	604b      	str	r3, [r1, #4]
 8000d34:	4638      	mov	r0, r7
 8000d36:	f104 060b 	add.w	r6, r4, #11
 8000d3a:	f000 f8cf 	bl	8000edc <__malloc_unlock>
 8000d3e:	f026 0607 	bic.w	r6, r6, #7
 8000d42:	1d23      	adds	r3, r4, #4
 8000d44:	1af2      	subs	r2, r6, r3
 8000d46:	d0b6      	beq.n	8000cb6 <_malloc_r+0x22>
 8000d48:	1b9b      	subs	r3, r3, r6
 8000d4a:	50a3      	str	r3, [r4, r2]
 8000d4c:	e7b3      	b.n	8000cb6 <_malloc_r+0x22>
 8000d4e:	6862      	ldr	r2, [r4, #4]
 8000d50:	42a3      	cmp	r3, r4
 8000d52:	bf0c      	ite	eq
 8000d54:	6032      	streq	r2, [r6, #0]
 8000d56:	605a      	strne	r2, [r3, #4]
 8000d58:	e7ec      	b.n	8000d34 <_malloc_r+0xa0>
 8000d5a:	4623      	mov	r3, r4
 8000d5c:	6864      	ldr	r4, [r4, #4]
 8000d5e:	e7b2      	b.n	8000cc6 <_malloc_r+0x32>
 8000d60:	4634      	mov	r4, r6
 8000d62:	6876      	ldr	r6, [r6, #4]
 8000d64:	e7b9      	b.n	8000cda <_malloc_r+0x46>
 8000d66:	230c      	movs	r3, #12
 8000d68:	603b      	str	r3, [r7, #0]
 8000d6a:	4638      	mov	r0, r7
 8000d6c:	f000 f8b6 	bl	8000edc <__malloc_unlock>
 8000d70:	e7a1      	b.n	8000cb6 <_malloc_r+0x22>
 8000d72:	6025      	str	r5, [r4, #0]
 8000d74:	e7de      	b.n	8000d34 <_malloc_r+0xa0>
 8000d76:	bf00      	nop
 8000d78:	20000094 	.word	0x20000094

08000d7c <_sbrk_r>:
 8000d7c:	b538      	push	{r3, r4, r5, lr}
 8000d7e:	4d06      	ldr	r5, [pc, #24]	; (8000d98 <_sbrk_r+0x1c>)
 8000d80:	2300      	movs	r3, #0
 8000d82:	4604      	mov	r4, r0
 8000d84:	4608      	mov	r0, r1
 8000d86:	602b      	str	r3, [r5, #0]
 8000d88:	f7ff fb36 	bl	80003f8 <_sbrk>
 8000d8c:	1c43      	adds	r3, r0, #1
 8000d8e:	d102      	bne.n	8000d96 <_sbrk_r+0x1a>
 8000d90:	682b      	ldr	r3, [r5, #0]
 8000d92:	b103      	cbz	r3, 8000d96 <_sbrk_r+0x1a>
 8000d94:	6023      	str	r3, [r4, #0]
 8000d96:	bd38      	pop	{r3, r4, r5, pc}
 8000d98:	2000009c 	.word	0x2000009c

08000d9c <__sread>:
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	460c      	mov	r4, r1
 8000da0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000da4:	f000 f8a0 	bl	8000ee8 <_read_r>
 8000da8:	2800      	cmp	r0, #0
 8000daa:	bfab      	itete	ge
 8000dac:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000dae:	89a3      	ldrhlt	r3, [r4, #12]
 8000db0:	181b      	addge	r3, r3, r0
 8000db2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000db6:	bfac      	ite	ge
 8000db8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000dba:	81a3      	strhlt	r3, [r4, #12]
 8000dbc:	bd10      	pop	{r4, pc}

08000dbe <__swrite>:
 8000dbe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000dc2:	461f      	mov	r7, r3
 8000dc4:	898b      	ldrh	r3, [r1, #12]
 8000dc6:	05db      	lsls	r3, r3, #23
 8000dc8:	4605      	mov	r5, r0
 8000dca:	460c      	mov	r4, r1
 8000dcc:	4616      	mov	r6, r2
 8000dce:	d505      	bpl.n	8000ddc <__swrite+0x1e>
 8000dd0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dd4:	2302      	movs	r3, #2
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	f000 f868 	bl	8000eac <_lseek_r>
 8000ddc:	89a3      	ldrh	r3, [r4, #12]
 8000dde:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000de2:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000de6:	81a3      	strh	r3, [r4, #12]
 8000de8:	4632      	mov	r2, r6
 8000dea:	463b      	mov	r3, r7
 8000dec:	4628      	mov	r0, r5
 8000dee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000df2:	f000 b817 	b.w	8000e24 <_write_r>

08000df6 <__sseek>:
 8000df6:	b510      	push	{r4, lr}
 8000df8:	460c      	mov	r4, r1
 8000dfa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000dfe:	f000 f855 	bl	8000eac <_lseek_r>
 8000e02:	1c43      	adds	r3, r0, #1
 8000e04:	89a3      	ldrh	r3, [r4, #12]
 8000e06:	bf15      	itete	ne
 8000e08:	6560      	strne	r0, [r4, #84]	; 0x54
 8000e0a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000e0e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000e12:	81a3      	strheq	r3, [r4, #12]
 8000e14:	bf18      	it	ne
 8000e16:	81a3      	strhne	r3, [r4, #12]
 8000e18:	bd10      	pop	{r4, pc}

08000e1a <__sclose>:
 8000e1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000e1e:	f000 b813 	b.w	8000e48 <_close_r>
	...

08000e24 <_write_r>:
 8000e24:	b538      	push	{r3, r4, r5, lr}
 8000e26:	4d07      	ldr	r5, [pc, #28]	; (8000e44 <_write_r+0x20>)
 8000e28:	4604      	mov	r4, r0
 8000e2a:	4608      	mov	r0, r1
 8000e2c:	4611      	mov	r1, r2
 8000e2e:	2200      	movs	r2, #0
 8000e30:	602a      	str	r2, [r5, #0]
 8000e32:	461a      	mov	r2, r3
 8000e34:	f7ff fa93 	bl	800035e <_write>
 8000e38:	1c43      	adds	r3, r0, #1
 8000e3a:	d102      	bne.n	8000e42 <_write_r+0x1e>
 8000e3c:	682b      	ldr	r3, [r5, #0]
 8000e3e:	b103      	cbz	r3, 8000e42 <_write_r+0x1e>
 8000e40:	6023      	str	r3, [r4, #0]
 8000e42:	bd38      	pop	{r3, r4, r5, pc}
 8000e44:	2000009c 	.word	0x2000009c

08000e48 <_close_r>:
 8000e48:	b538      	push	{r3, r4, r5, lr}
 8000e4a:	4d06      	ldr	r5, [pc, #24]	; (8000e64 <_close_r+0x1c>)
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	4604      	mov	r4, r0
 8000e50:	4608      	mov	r0, r1
 8000e52:	602b      	str	r3, [r5, #0]
 8000e54:	f7ff fa9f 	bl	8000396 <_close>
 8000e58:	1c43      	adds	r3, r0, #1
 8000e5a:	d102      	bne.n	8000e62 <_close_r+0x1a>
 8000e5c:	682b      	ldr	r3, [r5, #0]
 8000e5e:	b103      	cbz	r3, 8000e62 <_close_r+0x1a>
 8000e60:	6023      	str	r3, [r4, #0]
 8000e62:	bd38      	pop	{r3, r4, r5, pc}
 8000e64:	2000009c 	.word	0x2000009c

08000e68 <_fstat_r>:
 8000e68:	b538      	push	{r3, r4, r5, lr}
 8000e6a:	4d07      	ldr	r5, [pc, #28]	; (8000e88 <_fstat_r+0x20>)
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	4604      	mov	r4, r0
 8000e70:	4608      	mov	r0, r1
 8000e72:	4611      	mov	r1, r2
 8000e74:	602b      	str	r3, [r5, #0]
 8000e76:	f7ff fa99 	bl	80003ac <_fstat>
 8000e7a:	1c43      	adds	r3, r0, #1
 8000e7c:	d102      	bne.n	8000e84 <_fstat_r+0x1c>
 8000e7e:	682b      	ldr	r3, [r5, #0]
 8000e80:	b103      	cbz	r3, 8000e84 <_fstat_r+0x1c>
 8000e82:	6023      	str	r3, [r4, #0]
 8000e84:	bd38      	pop	{r3, r4, r5, pc}
 8000e86:	bf00      	nop
 8000e88:	2000009c 	.word	0x2000009c

08000e8c <_isatty_r>:
 8000e8c:	b538      	push	{r3, r4, r5, lr}
 8000e8e:	4d06      	ldr	r5, [pc, #24]	; (8000ea8 <_isatty_r+0x1c>)
 8000e90:	2300      	movs	r3, #0
 8000e92:	4604      	mov	r4, r0
 8000e94:	4608      	mov	r0, r1
 8000e96:	602b      	str	r3, [r5, #0]
 8000e98:	f7ff fa97 	bl	80003ca <_isatty>
 8000e9c:	1c43      	adds	r3, r0, #1
 8000e9e:	d102      	bne.n	8000ea6 <_isatty_r+0x1a>
 8000ea0:	682b      	ldr	r3, [r5, #0]
 8000ea2:	b103      	cbz	r3, 8000ea6 <_isatty_r+0x1a>
 8000ea4:	6023      	str	r3, [r4, #0]
 8000ea6:	bd38      	pop	{r3, r4, r5, pc}
 8000ea8:	2000009c 	.word	0x2000009c

08000eac <_lseek_r>:
 8000eac:	b538      	push	{r3, r4, r5, lr}
 8000eae:	4d07      	ldr	r5, [pc, #28]	; (8000ecc <_lseek_r+0x20>)
 8000eb0:	4604      	mov	r4, r0
 8000eb2:	4608      	mov	r0, r1
 8000eb4:	4611      	mov	r1, r2
 8000eb6:	2200      	movs	r2, #0
 8000eb8:	602a      	str	r2, [r5, #0]
 8000eba:	461a      	mov	r2, r3
 8000ebc:	f7ff fa8f 	bl	80003de <_lseek>
 8000ec0:	1c43      	adds	r3, r0, #1
 8000ec2:	d102      	bne.n	8000eca <_lseek_r+0x1e>
 8000ec4:	682b      	ldr	r3, [r5, #0]
 8000ec6:	b103      	cbz	r3, 8000eca <_lseek_r+0x1e>
 8000ec8:	6023      	str	r3, [r4, #0]
 8000eca:	bd38      	pop	{r3, r4, r5, pc}
 8000ecc:	2000009c 	.word	0x2000009c

08000ed0 <__malloc_lock>:
 8000ed0:	4801      	ldr	r0, [pc, #4]	; (8000ed8 <__malloc_lock+0x8>)
 8000ed2:	f7ff be0d 	b.w	8000af0 <__retarget_lock_acquire_recursive>
 8000ed6:	bf00      	nop
 8000ed8:	20000090 	.word	0x20000090

08000edc <__malloc_unlock>:
 8000edc:	4801      	ldr	r0, [pc, #4]	; (8000ee4 <__malloc_unlock+0x8>)
 8000ede:	f7ff be08 	b.w	8000af2 <__retarget_lock_release_recursive>
 8000ee2:	bf00      	nop
 8000ee4:	20000090 	.word	0x20000090

08000ee8 <_read_r>:
 8000ee8:	b538      	push	{r3, r4, r5, lr}
 8000eea:	4d07      	ldr	r5, [pc, #28]	; (8000f08 <_read_r+0x20>)
 8000eec:	4604      	mov	r4, r0
 8000eee:	4608      	mov	r0, r1
 8000ef0:	4611      	mov	r1, r2
 8000ef2:	2200      	movs	r2, #0
 8000ef4:	602a      	str	r2, [r5, #0]
 8000ef6:	461a      	mov	r2, r3
 8000ef8:	f7ff fa14 	bl	8000324 <_read>
 8000efc:	1c43      	adds	r3, r0, #1
 8000efe:	d102      	bne.n	8000f06 <_read_r+0x1e>
 8000f00:	682b      	ldr	r3, [r5, #0]
 8000f02:	b103      	cbz	r3, 8000f06 <_read_r+0x1e>
 8000f04:	6023      	str	r3, [r4, #0]
 8000f06:	bd38      	pop	{r3, r4, r5, pc}
 8000f08:	2000009c 	.word	0x2000009c

08000f0c <_init>:
 8000f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f0e:	bf00      	nop
 8000f10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f12:	bc08      	pop	{r3}
 8000f14:	469e      	mov	lr, r3
 8000f16:	4770      	bx	lr

08000f18 <_fini>:
 8000f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f1a:	bf00      	nop
 8000f1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000f1e:	bc08      	pop	{r3}
 8000f20:	469e      	mov	lr, r3
 8000f22:	4770      	bx	lr
